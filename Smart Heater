https://wokwi.com/projects/437330015699372033
#define BLYNK_TEMPLATE_ID "TMPL3YGf7NK7S"
#define BLYNK_TEMPLATE_NAME "Temperature and Humidity"
#define BLYNK_AUTH_TOKEN "0jrFfKPUWd9TojthWIBlX8lXVvSBidFi"


#include <WiFi.h>
#include <BlynkSimpleEsp32.h>
#include <DHTesp.h>
#include <Wire.h>
#include <LiquidCrystal_I2C.h>

// ----------- WiFi & Blynk Setup -----------
char ssid[] = "M35";
char pass[] = "kiranpegasus";


// ----------- Hardware Setup -----------
#define DHT_PIN        15
#define RELAY_PIN      25
#define IDLE_LED       16
#define HEATING_LED    17
#define TARGET_LED     18
#define OVERHEAT_LED   19
#define BUZZER_PIN     23
#define RESET_BUTTON   26

// ----------- State and Thresholds -----------
const float SETPOINT = 22.0;
const float OVERHEAT = 28.0;

enum State { IDLE, HEATING, TARGET, OVERHEAT_STATE };
State currentState = IDLE;
bool resetRequested = false;

// ----------- Sensor and Display -----------
DHTesp dhtSensor;
LiquidCrystal_I2C lcd(0x27, 16, 2);

// ----------- Interrupt Function -----------
void IRAM_ATTR handleResetInterrupt() {
  resetRequested = true;
}

void setup() {
  Serial.begin(115200);
  delay(1000);

  // Initialize LCD and DHT
  lcd.init();
  lcd.backlight();
  dhtSensor.setup(DHT_PIN, DHTesp::DHT22);

  // Pin Modes
  pinMode(RELAY_PIN, OUTPUT);
  pinMode(IDLE_LED, OUTPUT);
  pinMode(HEATING_LED, OUTPUT);
  pinMode(TARGET_LED, OUTPUT);
  pinMode(OVERHEAT_LED, OUTPUT);
  pinMode(BUZZER_PIN, OUTPUT);
  pinMode(RESET_BUTTON, INPUT_PULLUP);
  attachInterrupt(digitalPinToInterrupt(RESET_BUTTON), handleResetInterrupt, FALLING);

  lcd.setCursor(0, 0);
  lcd.print("Connecting WiFi");
  Serial.print("Connecting to WiFi");

  // Manual Wi-Fi connection
  WiFi.begin(ssid, pass);
  int wifiAttempt = 0;
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
    wifiAttempt++;
    if (wifiAttempt > 40) {
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("WiFi Failed!");
      Serial.println("\nWiFi connection failed.");
      return;
    }
  }

  Serial.println("\nWiFi connected");
  Serial.print("IP: ");
  Serial.println(WiFi.localIP());
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("WiFi Connected");

  // Blynk setup manually
  Blynk.config(BLYNK_AUTH_TOKEN);
  if (!Blynk.connect(10000)) {
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Blynk Failed!");
    Serial.println("Blynk failed to connect.");
    return;
  }
  lcd.setCursor(0, 1);
  lcd.print("Blynk Connected");
  delay(2000);
  lcd.clear();
}

void loop() {
  Blynk.run();

  TempAndHumidity data = dhtSensor.getTempAndHumidity();
  float temperature = data.temperature;
  float humidity = data.humidity;

  if (isnan(temperature) || isnan(humidity)) {
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Sensor Error!");
    digitalWrite(RELAY_PIN, LOW);
    return;
  }

  // ----------- State Transitions -----------
  switch (currentState) {
    case IDLE:
      if (temperature < SETPOINT) currentState = HEATING;
      else if (temperature >= OVERHEAT) currentState = OVERHEAT_STATE;
      break;
    case HEATING:
      if (temperature >= SETPOINT) currentState = TARGET;
      else if (temperature >= OVERHEAT) currentState = OVERHEAT_STATE;
      break;
    case TARGET:
      if (temperature < SETPOINT - 0.5) currentState = HEATING;
      else if (temperature >= OVERHEAT) currentState = OVERHEAT_STATE;
      break;
    case OVERHEAT_STATE:
      if (resetRequested && temperature < OVERHEAT - 1.0) {
        currentState = IDLE;
        resetRequested = false;
      }
      break;
  }

  // ----------- Actuator Control -----------
  digitalWrite(RELAY_PIN, currentState == HEATING ? HIGH : LOW);
  digitalWrite(BUZZER_PIN, currentState == OVERHEAT_STATE);

  digitalWrite(IDLE_LED, currentState == IDLE);
  digitalWrite(HEATING_LED, currentState == HEATING);
  digitalWrite(TARGET_LED, currentState == TARGET);
  digitalWrite(OVERHEAT_LED, currentState == OVERHEAT_STATE);

  // ----------- LCD Display -----------
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("State: ");
  lcd.print(stateToString(currentState));

  lcd.setCursor(0, 1);
  lcd.print("T:");
  lcd.print(temperature, 1);
  lcd.print("C H:");
  lcd.print(humidity, 0);
  lcd.print("%");

  // ----------- Serial Monitor -----------
  Serial.print("Temp: ");
  Serial.print(temperature);
  Serial.print(" C, Hum: ");
  Serial.print(humidity);
  Serial.print(" %, State: ");
  Serial.println(stateToString(currentState));

  // ----------- Blynk Send Virtual Pins (Optional) -----------
  Blynk.virtualWrite(V0, temperature);
  Blynk.virtualWrite(V1, humidity);
  Blynk.virtualWrite(V2, stateToString(currentState));

  delay(2000);
}

String stateToString(State s) {
  switch (s) {
    case IDLE: return "IDLE";
    case HEATING: return "HEATING";
    case TARGET: return "TARGET";
    case OVERHEAT_STATE: return "OVERHEAT";
    default: return "UNKNOWN";
  }
}

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

json

{
  "version": 1,
  "author": "KIRAN GOPI",
  "editor": "wokwi",
  "parts": [
    { "type": "wokwi-breadboard-mini", "id": "bb1", "top": 37, "left": 93.6, "attrs": {} },
    { "type": "board-esp32-devkit-c-v4", "id": "esp", "top": -9.6, "left": -119.96, "attrs": {} },
    {
      "type": "wokwi-lcd1602",
      "id": "lcd1",
      "top": -118.4,
      "left": 15.2,
      "attrs": { "pins": "i2c" }
    },
    {
      "type": "wokwi-dht22",
      "id": "dht1",
      "top": -66.9,
      "left": -207,
      "attrs": { "temperature": "80", "humidity": "100" }
    },
    {
      "type": "wokwi-led",
      "id": "led1",
      "top": 15.6,
      "left": 99.8,
      "attrs": { "color": "green" }
    },
    { "type": "wokwi-led", "id": "led2", "top": 15.6, "left": 128.6, "attrs": { "color": "red" } },
    {
      "type": "wokwi-led",
      "id": "led3",
      "top": 15.6,
      "left": 157.4,
      "attrs": { "color": "blue" }
    },
    {
      "type": "wokwi-led",
      "id": "led4",
      "top": 15.6,
      "left": 186.2,
      "attrs": { "color": "yellow" }
    },
    {
      "type": "wokwi-resistor",
      "id": "r1",
      "top": 100.8,
      "left": 95.45,
      "rotate": 90,
      "attrs": { "value": "220" }
    },
    {
      "type": "wokwi-resistor",
      "id": "r2",
      "top": 100.8,
      "left": 124.25,
      "rotate": 90,
      "attrs": { "value": "220" }
    },
    {
      "type": "wokwi-resistor",
      "id": "r3",
      "top": 100.8,
      "left": 153.05,
      "rotate": 90,
      "attrs": { "value": "220" }
    },
    {
      "type": "wokwi-resistor",
      "id": "r4",
      "top": 100.8,
      "left": 181.85,
      "rotate": 90,
      "attrs": { "value": "220" }
    },
    { "type": "wokwi-gnd", "id": "gnd1", "top": 153.6, "left": 229.8, "attrs": {} },
    {
      "type": "wokwi-buzzer",
      "id": "bz1",
      "top": -160.8,
      "left": -94.2,
      "attrs": { "volume": "0.1" }
    },
    {
      "type": "wokwi-pushbutton",
      "id": "btn1",
      "top": 83,
      "left": -268.8,
      "attrs": { "color": "blue", "xray": "1" }
    },
    {
      "type": "wokwi-relay-module",
      "id": "relay1",
      "top": 133.8,
      "left": -358.4,
      "rotate": 180,
      "attrs": {}
    }
  ],
  "connections": [
    [ "esp:TX", "$serialMonitor:RX", "", [] ],
    [ "esp:RX", "$serialMonitor:TX", "", [] ],
    [ "lcd1:GND", "esp:GND.2", "black", [ "h0" ] ],
    [ "lcd1:VCC", "esp:5V", "red", [ "h-144", "v288.1" ] ],
    [ "lcd1:SDA", "esp:21", "green", [ "h-9.6", "v144.2" ] ],
    [ "lcd1:SCL", "esp:22", "green", [ "h0", "v105.9" ] ],
    [ "dht1:GND", "esp:GND.1", "black", [ "v0" ] ],
    [ "dht1:VCC", "esp:5V", "red", [ "v0" ] ],
    [ "dht1:SDA", "esp:15", "green", [ "v182.4", "h192.1", "v-57.6" ] ],
    [ "esp:16", "bb1:3b.i", "green", [ "h48", "v19.2" ] ],
    [ "esp:17", "bb1:6b.i", "red", [ "h38.4", "v48", "h96" ] ],
    [ "esp:18", "bb1:9b.i", "blue", [ "h57.6", "v76.8", "h105.6" ] ],
    [ "esp:19", "bb1:12b.i", "gold", [ "h19.2", "v96", "h28.8" ] ],
    [ "led1:C", "bb1:15b.i", "black", [ "v9.6", "h-18.8" ] ],
    [ "led2:C", "bb1:15b.h", "black", [ "v0" ] ],
    [ "led3:C", "bb1:15b.g", "black", [ "v0" ] ],
    [ "led4:C", "bb1:15b.f", "black", [ "v0" ] ],
    [ "bz1:1", "esp:GND.2", "black", [ "v0" ] ],
    [ "bz1:2", "esp:23", "red", [ "v38.4", "h47.6", "v48" ] ],
    [ "relay1:VCC", "esp:5V", "red", [ "h19.2", "v19.2" ] ],
    [ "relay1:GND", "esp:GND.1", "black", [ "h96", "v0.4" ] ],
    [ "relay1:IN", "esp:25", "green", [ "h86.4", "v-57.4" ] ],
    [ "r1:1", "bb1:3t.d", "", [ "$bb" ] ],
    [ "r1:2", "bb1:3b.h", "", [ "$bb" ] ],
    [ "r2:1", "bb1:6t.d", "", [ "$bb" ] ],
    [ "r2:2", "bb1:6b.h", "", [ "$bb" ] ],
    [ "r3:1", "bb1:9t.d", "", [ "$bb" ] ],
    [ "r3:2", "bb1:9b.h", "", [ "$bb" ] ],
    [ "r4:1", "bb1:12t.d", "", [ "$bb" ] ],
    [ "r4:2", "bb1:12b.h", "", [ "$bb" ] ],
    [ "gnd1:GND", "bb1:15b.j", "", [ "$bb" ] ],
    [ "led4:A", "bb1:12t.b", "", [ "$bb" ] ],
    [ "led4:C", "bb1:11t.b", "", [ "$bb" ] ],
    [ "led3:A", "bb1:9t.b", "", [ "$bb" ] ],
    [ "led3:C", "bb1:8t.b", "", [ "$bb" ] ],
    [ "led2:A", "bb1:6t.b", "", [ "$bb" ] ],
    [ "led2:C", "bb1:5t.b", "", [ "$bb" ] ],
    [ "led1:A", "bb1:3t.b", "", [ "$bb" ] ],
    [ "led1:C", "bb1:2t.b", "", [ "$bb" ] ],
    [ "btn1:2.r", "esp:GND.1", "black", [ "h57.8", "v9.8" ] ],
    [ "btn1:1.r", "esp:26", "green", [ "v0" ] ]
  ],
  "dependencies": {}
}
